server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /web3auth

logging:
  level:
    net.consensys.web3auth: ${LOG_LEVEL:INFO}
    org.web3j: ${LOG_LEVEL:INFO}
   
    
web3auth:               
  appId: demo

  otp:
    type: IN_MEMORY # IN_MEMORY or DB
    dictionnary: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
    length: 10
    prefix: "Log in to kauri.io by signing this secret code: "
    expiration: 60 # seconds
    
  jwt:
    issuer: "demo"
    secret: "secret!"
    expiration: 2592000 # seconds
    
  cookie:
     path: "/"
     domain: "localhost"
     secure: false
      
  authority:
    mode: NONE # NONE | GETTER | EVENT | CACHE
    ethereum: http://localhost:8545 # only for mode GETTER and EVENT
    smartContract: 0x752dad129739df65e5a8949e50a63d231fbe8403 # only for mode GETTER and EVENT
    kafkaAddress: localhost:9092 # only for mode CACHE
    groupId: web3auth # only for mode CACHE
    topic: contract-events # only for mode CACHE
   
  wallet:
    enable: true
    mode: DIRECT # NONE | DIRECT | RELAY
    relay:
      endpoint: http://localhost:8080/relay 
    relay: 
      mnemonic: "1 2 3"
      rpcUrl: "http://localhost:8545"

  clients:
    - clientId: demo_client
      type: BROWSER
      url: http://localhost:8081
    
    - clientId: demo_service
      type: BEARER
      url: http://localhost:8082
      
  cors:
    origins: "${CORS_ORIGIN:http://localhost:8080}"
    methods: "${CORS_METHODS:GET,POST,PUT,OPTIONS,DELETE,PATCH}"
    headers: "${CORS_HEADERS:Access-Control-Allow-Headers,Origin,X-Requested-With,Content-Type,Accept,X-Auth-Token}"
    credentials: "${CORS_CREDENTIALS:true}"
  
  mongodb:
    host: ${SPRING_DATA_MONGODB_HOST:localhost}
    port: ${SPRING_DATA_MONGODB_PORT:27017}
    uri: ${SPRING_DATA_MONGODB_URI:#{null}} 
    database: ${SPRING_DATA_MONGODB_DATABASE:web3auth}      